{"version":3,"sources":["sample-restaurants.js","components/Landing.js","components/Header.js","components/Shipment.js","components/Order.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","components/Burger.js","sample-burgers.js","base.js","components/Auth/Login.js","components/Auth/SignIn.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","Landing","props","useState","display","toggleDisplay","setTitle","setUrl","className","onClick","map","restaurant","getTitle","key","history","push","Header","Shipment","total","this","shipping","shippingNeon","React","Component","Order","renderOrder","burger","burgers","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","deleteFromOrder","orderIds","Object","keys","reduce","prevTotal","AddBurgerForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefaut","current","value","parseFloat","desc","image","AddBurger","currentTarget","reset","onSubmit","ref","type","placeholder","autoComplete","sdescRef","EditBurgerForm","handleChange","updatedBurger","updateBurger","index","onChange","deleteBurger","MenuAdmin","state","photo","user","authHandler","authData","a","email","photoURL","setState","firebase","auth","onAuthStateChanged","avatar","src","alt","handleLogout","loadSampleBurgers","Burger","details","disabled","addToOrder","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Login","authenticate","SignIn","authProvider","signInWithPopup","then","children","App","addBurger","Date","now","signOut","window","location","reload","params","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.bdb42219.chunk.js","sourcesContent":["// Наши рестораны\nconst restaurants = [\n  {\n    title: 'Hot Burger Тверская',\n    url: 'hot-burger-tverskaya',\n    id: 1\n  },\n\n  {\n    title: 'Hot Burger Маросейка',\n    url: 'hot-burger-maroseyka',\n    id: 2\n  },\n  {\n    title: 'Hot Burger Петровка',\n    url: 'hot-burger-petrovka',\n    id: 3\n  }\n];\n\nexport default restaurants;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport restaurants from '../sample-restaurants';\n\nconst Landing = props => {\n  const [display, toggleDisplay] = useState(false);\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n\n  const displayList = () => {\n    toggleDisplay(!display);\n  };\n\n  const getTitle = restaurant => {\n    const { title, url } = restaurant;\n    setTitle(title);\n    setUrl(url);\n    toggleDisplay(false);\n  };\n\n  const gotToRestaurant = () => {\n    props.history.push(`/restaurant/${url}`);\n  };\n\n  return (\n    <div className='restaurant_select'>\n      <div className='restaurant_select_top'>\n        <div\n          onClick={displayList}\n          className='restaurant_select_top-header font-effect-outline'\n        >\n          {title ? title : 'Выбери ресторан'}\n        </div>\n        <div className='arrow_picker'>\n          <div className='arrow_picker-up'></div>\n          <div className='arrow_picker-down'></div>\n        </div>\n      </div>\n\n      {display ? (\n        <div className='restaurant_select_bottom'>\n          <ul>\n            {restaurants.map(restaurant => {\n              return (\n                <li onClick={() => getTitle(restaurant)} key={restaurant.id}>\n                  {restaurant.title}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      ) : null}\n\n      {title && !display ? (\n        <button onClick={gotToRestaurant}>Перейти в ресторан</button>\n      ) : null}\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  history: PropTypes.object\n};\n\nexport default Landing;\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Header = props => (\r\n    <header className='top'>\r\n      <div className='wrap'>\r\n        <div className='header-content'>\r\n          <div className='header-rating'>\r\n          <div className='header-rating_tag'>Рейтинг:</div>\r\n          <div className='header-rating_icon'>🟊🟊🟊🟊🟊</div>\r\n          </div>\r\n          <div className='header-divider'></div>\r\n          <h1 className='font-effect-fire-animation'>{props.title}</h1>\r\n          <h3>\r\n            <span>\r\n              Быстрая доставка горячих\r\n              <span className='sub-header'> #бургеров</span>\r\n            </span>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n\r\n  Header.propTypes = {\r\n    title: propTypes.string.isRequired\r\n  };\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Shipment extends React.Component{\r\n\r\n  static propTypes = {\r\n    total: PropTypes.number\r\n  };\r\n\r\n\r\n  render() {\r\n    const {total} = this.props;\r\n    const shipping = total >0 && total < 500 ? 350 : 99;\r\n    const shippingNeon = shipping === 99 ? (\r\n      <span className='font-effect-neon total_wrap-sheap'>\r\n        {shipping} ₽\r\n      </span>\r\n    ) : (\r\n      <span>{shipping} ₽</span>\r\n    );\r\n    return (\r\n      <div className='total'>\r\n        <div className='total_wrap'>\r\n          <div>\r\n            <div>Доставка: {total > 0 ? shippingNeon : null}</div>\r\n            <div className='total_wrap-free'>\r\n              {total < 500 ? `Закажите еще на ${500 - total} ₽ для доставки за 99 ₽` : null}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='total_wrap-final'>Итоги: {total} ₽</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shipment;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Shipment from './Shipment';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    burgers: PropTypes.object,\r\n    order: PropTypes.object,\r\n    deleteFromOrder: PropTypes.func\r\n  };\r\n\r\n  renderOrder = key => {\r\n    const burger = this.props.burgers[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = burger && burger.status === 'available';\r\n    const transitionOptions = {\r\n      classNames: 'order',\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n    if (!burger) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li className='unavailable' key={key}>\r\n            Извините, {burger ? burger.name : 'бургер'} временно недоступен\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component='span' className='count'>\r\n              <CSSTransition\r\n                classNames='count'\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            шт. {burger.name}\r\n            <span> {count * burger.price} ₽</span>\r\n            <button\r\n              onClick={() => this.props.deleteFromOrder(key)}\r\n              className='cancellItem'>\r\n              &times;\r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const burger = this.props.burgers[key];\r\n      const count = this.props.order[key];\r\n\r\n      const isAvailable = burger && burger.status === 'available';\r\n      if (isAvailable) {\r\n        return prevTotal + burger.price * count;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n\r\n    return (\r\n      <div className='order-wrap'>\r\n        <h2>Ваш Заказ</h2>\r\n\r\n        <TransitionGroup component='ul' className='order'>\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n\r\n        {total > 0 ? (\r\n          <Shipment total={total} />\r\n        ) : (\r\n          <div className='nothingSelected'>\r\n            Выберите блюда и добавьте к заказу\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddBurgerForm extends React.Component {\r\n\r\n  static propTypes = {\r\n    AddBurgerForm: PropTypes.func\r\n  };\r\n\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n\r\n  createBurger = (event) => {\r\n    event.preventDefaut();\r\n    const burger = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value || 0),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.AddBurger(burger);\r\n    event.currentTarget.reset();\r\n  }\r\n\r\n\r\n  render (){\r\n    return (\r\n    <form className='burger-edit' onSubmit={this.createBurger}>\r\n      <input ref={this.nameRef} name='name' \r\n      type='text' \r\n      placeholder='Name' \r\n      autoComplete='off'/>\r\n      <input \r\n      ref={this.priceRef}\r\n      name='price' \r\n      type='text' \r\n      placeholder='Price' \r\n      autoComplete='off'/>\r\n      <select ref={this.statusRef} name='status' className='status'>\r\n        <option value='available'>Доступно</option>\r\n        <option value='unavailable'>Убрать из меню</option>\r\n      </select>\r\n      <textarea ref={this.sdescRef} name='desc' placeholder='Desc' />\r\n      <input \r\n      ref={this.imageRef}\r\n      name='image' \r\n      type='text' \r\n      placeholder='Image' \r\n      autoComplete='off'/>\r\n      <button type='samit'>+ Добавить в меню</button>\r\n    </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddBurgerForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditBurgerForm extends React.Component {\r\n  static propTypes = {\r\n    burger: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      price: PropTypes.number,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string\r\n    }),\r\n    index: PropTypes.string,\r\n    updateBurger: PropTypes.func,\r\n    deleteBurger: PropTypes.func\r\n  };\r\n\r\n  handleChange = event => {\r\n    const updatedBurger = {\r\n      ...this.props.burger,\r\n      [event.currentTarget.name]:\r\n        event.currentTarget.name === 'price'\r\n          ? parseFloat(event.currentTarget.value) || 0\r\n          : event.currentTarget.value\r\n    };\r\n    this.props.updateBurger(this.props.index, updatedBurger);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='burger-edit'>\r\n        <input\r\n          onChange={this.handleChange}\r\n          name='name'\r\n          type='text'\r\n          value={this.props.burger.name}\r\n        />\r\n        <input\r\n          onChange={this.handleChange}\r\n          name='price'\r\n          type='text'\r\n          value={this.props.burger.price}\r\n        />\r\n        <select\r\n          onChange={this.handleChange}\r\n          name='status'\r\n          className='status'\r\n          value={this.props.burger.status}\r\n        >\r\n          <option value='available'>Доступно!</option>\r\n          <option value='unavailable'>Не доступно!</option>\r\n        </select>\r\n        <textarea\r\n          onChange={this.handleChange}\r\n          name='desc'\r\n          value={this.props.burger.desc}\r\n        />\r\n        <input\r\n          onChange={this.handleChange}\r\n          name='image'\r\n          type='text'\r\n          value={this.props.burger.image}\r\n        />\r\n        <button onClick={() => this.props.deleteBurger(this.props.index)}>\r\n          Удалить из меню\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditBurgerForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddBurgerForm from './AddBurgerForm';\r\nimport EditBurgerForm from './EditBurgerForm';\r\nimport firebase from 'firebase/app';\r\n\r\n\r\nclass MenuAdmin extends React.Component {\r\n  state = {\r\n    photo: '',\r\n    user: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    burgers: PropTypes.object,\r\n    deleteBurger: PropTypes.func,\r\n    updateBurger: PropTypes.func,\r\n    addBurger: PropTypes.func,\r\n    loadSampleBurger: PropTypes.func,\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    const { email, photoURL } = authData.user;\r\n    this.setState({ user: email, photo: photoURL });\r\n  };\r\n\r\n  render (){\r\n    const {user, photo } = this.state;\r\n    const avatar = photo ? photo : '/images/avatar.png';\r\n    return (\r\n      <div className='menu-admin'>\r\n        { user ? (\r\n        <div className='login-header'>\r\n          <div className='avatar'>\r\n            <img src={avatar} alt={user} />\r\n          </div>\r\n          <button className='buttonLogout' onClick={this.props.handleLogout}>\r\n            Выйти</button>\r\n        </div> \r\n        ): null}\r\n        <h2>Управление меню</h2>\r\n        {Object.keys(this.props.burgers).map(key =>{\r\n          return <EditBurgerForm \r\n          key={key}\r\n          index={key}\r\n          deleteBurger ={this.props.deleteBurger}\r\n          burger={this.props.burgers[key]} \r\n          updateBurger={this.props.updateBurger}\r\n          />\r\n        })}\r\n        <AddBurgerForm AddBurger={this.props.AddBurger}/>\r\n        <button onClick={this.props.loadSampleBurgers}>Загрузить бургеры</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuAdmin;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Burger extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string, \r\n      name: PropTypes.string, \r\n      price:PropTypes.number, \r\n      desc: PropTypes.string, \r\n      status: PropTypes.string\r\n    }),\r\n    index: PropTypes.string,\r\n    addToOrder: PropTypes.func\r\n  };\r\n\r\n\r\n  render (){\r\n    const {image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === 'available';\r\n    return (\r\n      <li className='menu-burger'>\r\n        <div className='image-container'>\r\n          <img src={image} alt={name} />\r\n        </div>\r\n\r\n        <div className='burger-details'>\r\n          <h3 className='burger-name'>\r\n            {name}\r\n            <span className='price'>{price} ₽</span>\r\n          </h3>\r\n          <p>{desc}</p>\r\n          <button \r\n          className='buttonOrder' disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\r\n            {isAvailable ? 'Заказать' : 'Временно нет'}</button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Burger;","// Наше меню\nconst sampleBurgers = {\n  burger1: {\n    name: 'Чизбургер',\n    image: '/images/cheese.jpg',\n    desc:\n      'Классический бургер с бифштексом из 100% говядины с маринованными огурчиками и свежей пшеничной булочкой.',\n    price: 110,\n    status: 'available'\n  },\n\n  burger2: {\n    name: 'Чикенбургер',\n    image: '/images/chicken.jpg',\n    desc:\n      'Куриный бургер с добавлением расплавленного сыра, соуса Барбекю и листового салата.',\n    price: 140,\n    status: 'available'\n  },\n\n  burger3: {\n    name: 'Двойной Гамбургер',\n    image: '/images/double.jpg',\n    desc:\n      'Двойной гамбургер с бифштексом из 100% говядины и расплавленным сыром Чеддер и пряным соусом.',\n    price: 200,\n    status: 'unavailable'\n  },\n\n  burger4: {\n    name: 'Фишбургер',\n    image: '/images/fish.jpg',\n    desc:\n      'Рыбное филе высшего качества c листовым салатом, маринованными огурчиками и преправленное легким майонезом.',\n    price: 150,\n    status: 'available'\n  },\n\n  burger5: {\n    name: 'Картофель Фри',\n    image: '/images/fries.jpg',\n    desc:\n      'Хрустящие ломтики золотистого горячего картофеля Супер Фри, сделанные из отборного органического корнеплода!',\n    price: 85,\n    status: 'available'\n  },\n\n  burger6: {\n    name: 'King Бургер',\n    image: '/images/ham.jpg',\n    desc:\n      'Бургер из 100% отборной говядины, с жаренными ломтиками бекона и свежим расплавленным сыром, заправленный кетчупом и майонезом.',\n    price: 450,\n    status: 'available'\n  },\n\n  burger7: {\n    name: 'Мега Бургер',\n    image: '/images/mega.jpg',\n    desc:\n      'Наш самый большой бургер, сделанный из свежайшего бифштекса, с добавлением расплавленного сыра Чеддер и соленых огурчиков.',\n    price: 500,\n    status: 'available'\n  },\n\n  burger8: {\n    name: 'Бургер в Пите',\n    image: '/images/pita.jpg',\n    desc:\n      'Четыре котлеты из 100% говядины, покрытые плавленным сыром Чеддер, со свежим листовым салатом в свежей пшеничной лепешке.',\n    price: 380,\n    status: 'available'\n  },\n\n  burger9: {\n    name: 'Village Фри',\n    image: '/images/bakedFries.jpg',\n    desc:\n      'Порция свежих ломтиков картофеля, запеченых на открытом воздухе под мирно тлеющими углями',\n    price: 90,\n    status: 'available'\n  }\n};\n\nexport default sampleBurgers;\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAmggpQiD9LqviihvWZbpOKen3xvIA97hY\",\r\n  authDomain: \"very-hot-burgers-fd25c.firebaseapp.com\",\r\n  databaseURL: \"https://very-hot-burgers-fd25c-default-rtdb.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebase.database());\r\n\r\nexport {firebaseApp };\r\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => {\n  return (\n    <div className='login-container'>\n      <nav className='login'>\n        <h2>Авторизация</h2>\n        <p>Введите логин и пароль вашего эккаунта Github</p>\n        <button className='github' onClick={() => props.authenticate()}>\n          Войти\n        </button>\n      </nav>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import React from 'react';\nimport Login from './Login';\nimport firebase from 'firebase/app';\nimport { firebaseApp } from '../../base';\n\nclass SignIn extends React.Component {\n  state = {\n    user: ''\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    const { email } = authData.user;\n    this.setState({ user: email });\n  };\n\n  authenticate = () => {\n    const authProvider = new firebase.auth['GithubAuthProvider']();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  render() {\n    if (!this.state.user) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default SignIn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport MenuAdmin from './MenuAdmin';\nimport Burger from './Burger';\nimport sampleBurgers from '../sample-burgers';\nimport base from '../base';\nimport firebase from 'firebase/app';\nimport SignIn from './Auth/SignIn';\n\nclass App extends React.Component {\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  state = {\n    burgers: {},\n    order: {}\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    const localStorageRef = localStorage.getItem(params.restaurantId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n      context: this,\n      state: 'burgers'\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addBurger = burger => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Добавить новый бургер в переменную burgers\n    burgers[`burger${Date.now()}`] = burger;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  updateBurger = (key, updatedBurger) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Обновляем нужный burger\n    burgers[key] = updatedBurger;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  deleteBurger = key => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Удаляем burger\n    burgers[key] = null;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  loadSampleBurgers = () => {\n    this.setState({ burgers: sampleBurgers });\n  };\n\n  addToOrder = key => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Добавить ключ к заказу со знач-ем 1, либо обновить текущ. знач.\n    order[key] = order[key] + 1 || 1;\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  deleteFromOrder = key => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Удаляем burger\n    delete order[key];\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  handleLogout = async () => {\n    await firebase.auth().signOut();\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <SignIn>\n        <div className='burger-paradise'>\n          <div className='menu'>\n            <Header title='Hot Burgers' />\n            <ul className='burgers'>\n              {Object.keys(this.state.burgers).map(key => {\n                return (\n                  <Burger\n                    key={key}\n                    index={key}\n                    addToOrder={this.addToOrder}\n                    details={this.state.burgers[key]}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n          <Order\n            deleteFromOrder={this.deleteFromOrder}\n            burgers={this.state.burgers}\n            order={this.state.order}\n          />\n          <MenuAdmin\n            addBurger={this.addBurger}\n            loadSampleBurgers={this.loadSampleBurgers}\n            burgers={this.state.burgers}\n            updateBurger={this.updateBurger}\n            deleteBurger={this.deleteBurger}\n            handleLogout={this.handleLogout}\n          />\n        </div>\n      </SignIn>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h2>The Page is Not Found</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport Landing from \"./Landing\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/' component={Landing} />\r\n        <Route path='/restaurant/:restaurantId' component={App}/>\r\n        <Route  component={NotFound}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;","import React from 'react';\nimport {render} from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\n\nrender(<Router/>, document.querySelector('#root'));"],"sourceRoot":""}